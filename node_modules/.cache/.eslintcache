[{"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\index.js":"1","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\App\\App.js":"2","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\contexts\\UserContexts.js":"3","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\GlobalStyle.js":"4","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Login\\Login.js":"5","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\SignUp\\SignUp.js":"6","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\LikedPosts\\LikedPosts.js":"7","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Header\\Header.js":"8","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\HashtagPage\\HashtagPage.js":"9","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\Timeline.js":"10","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\MyPosts\\MyPosts.js":"11","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Trending\\Trending.js":"12","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\SearchBar\\SearchBar.js":"13","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\UserPage\\UserPage.js":"14","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\StyledTimeline.js":"15","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\CreatePost.js":"16","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\PostsList.js":"17","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Loading\\Loading.js":"18","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\useInterval\\useInterval.js":"19","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\LocationButton.js":"20","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\Post.js":"21","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\PostStyle.js":"22","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\EditButton.js":"23","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\DeleteButton.js":"24","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\RepostButton.js":"25","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\EditArea.js":"26","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\LocationIndicator.js":"27","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Likes\\Likes.js":"28","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CommentsButton.js":"29","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CommentsSection.js":"30","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CreateComment.js":"31","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\Avatar.js":"32"},{"size":138,"mtime":1621906183923,"results":"33","hashOfConfig":"34"},{"size":2016,"mtime":1622827270159,"results":"35","hashOfConfig":"34"},{"size":111,"mtime":1621906183920,"results":"36","hashOfConfig":"34"},{"size":407,"mtime":1622570705050,"results":"37","hashOfConfig":"34"},{"size":6154,"mtime":1622678440008,"results":"38","hashOfConfig":"34"},{"size":7302,"mtime":1622827270175,"results":"39","hashOfConfig":"34"},{"size":2652,"mtime":1622827270175,"results":"40","hashOfConfig":"34"},{"size":4555,"mtime":1622827270175,"results":"41","hashOfConfig":"34"},{"size":3750,"mtime":1622827270175,"results":"42","hashOfConfig":"34"},{"size":3571,"mtime":1622827270190,"results":"43","hashOfConfig":"34"},{"size":3495,"mtime":1622827270175,"results":"44","hashOfConfig":"34"},{"size":4116,"mtime":1623273291346,"results":"45","hashOfConfig":"34"},{"size":6611,"mtime":1623273291344,"results":"46","hashOfConfig":"34"},{"size":8525,"mtime":1622827270190,"results":"47","hashOfConfig":"34"},{"size":1024,"mtime":1622827270175,"results":"48","hashOfConfig":"34"},{"size":5012,"mtime":1622827270175,"results":"49","hashOfConfig":"34"},{"size":2089,"mtime":1622828636201,"results":"50","hashOfConfig":"34"},{"size":738,"mtime":1622570705047,"results":"51","hashOfConfig":"34"},{"size":459,"mtime":1622619897626,"results":"52","hashOfConfig":"34"},{"size":2071,"mtime":1622570705058,"results":"53","hashOfConfig":"34"},{"size":8233,"mtime":1623273282367,"results":"54","hashOfConfig":"34"},{"size":5626,"mtime":1622827270175,"results":"55","hashOfConfig":"34"},{"size":1835,"mtime":1622150667813,"results":"56","hashOfConfig":"34"},{"size":3988,"mtime":1622827270175,"results":"57","hashOfConfig":"34"},{"size":3925,"mtime":1622827270190,"results":"58","hashOfConfig":"34"},{"size":1832,"mtime":1622150667813,"results":"59","hashOfConfig":"34"},{"size":2389,"mtime":1622827270190,"results":"60","hashOfConfig":"34"},{"size":3990,"mtime":1622570844496,"results":"61","hashOfConfig":"34"},{"size":749,"mtime":1622827270159,"results":"62","hashOfConfig":"34"},{"size":4116,"mtime":1622827270159,"results":"63","hashOfConfig":"34"},{"size":2611,"mtime":1622828636180,"results":"64","hashOfConfig":"34"},{"size":496,"mtime":1622619897607,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aqnwkn",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\index.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\App\\App.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\contexts\\UserContexts.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\GlobalStyle.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Login\\Login.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\SignUp\\SignUp.js",["140"],"import { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nexport default function SignUp() {\r\n  let history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      const userStorage = JSON.parse(localStorage.user);\r\n      setUser(userStorage);\r\n      history.push(\"/timeline\");\r\n    }\r\n  }, [user]);\r\n\r\n  function newUser(event) {\r\n    event.preventDefault();\r\n    if (\r\n      validateEmail(email) &&\r\n      password.trim().length > 0 &&\r\n      name.trim().length > 0 &&\r\n      isURL(image)\r\n    ) {\r\n      setLoading(true);\r\n      const body = {\r\n        email,\r\n        password,\r\n        username: name,\r\n        pictureUrl: image,\r\n      };\r\n      const request = axios.post(\r\n        \"https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/sign-up\",\r\n        body\r\n      );\r\n      request.then((response) => {\r\n        history.push(\"/\");\r\n      });\r\n\r\n      request.catch((error) => {\r\n        if (error.response.status === 403) {\r\n          alert(\"Registration error. Email already registered.\");\r\n        } else {\r\n          if (error.response.data.message) {\r\n            alert(\r\n              `Registration error. ${error.response.data.message}. Please try again.`\r\n            );\r\n          } else {\r\n            alert(\"Registration error. Please try again.\");\r\n          }\r\n        }\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      if (!validateEmail(email)) {\r\n        alert(\"Please check your email.\");\r\n        return;\r\n      }\r\n      if (!isURL(image)) {\r\n        alert(\"Please check your image URL.\");\r\n        return;\r\n      }\r\n      if (password.trim().length === 0) {\r\n        alert(\"Plase type a password.\");\r\n        return;\r\n      }\r\n      if (name.trim().length === 0) {\r\n        alert(\"Please type your name.\");\r\n      }\r\n    }\r\n  }\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n  function isURL(url) {\r\n    const re =\r\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\r\n    return re.test(String(url).toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Introduction>\r\n        <p className=\"page-title\">linkr</p>\r\n        <p className=\"page-subtitle\">\r\n          save, share and discover the best links on the web\r\n        </p>\r\n      </Introduction>\r\n      <FormContainer>\r\n        <Form onSubmit={newUser}>\r\n          <input\r\n            disabled={loading}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            type=\"email\"\r\n            placeholder=\"e-mail\"\r\n            required\r\n          ></input>\r\n          <input\r\n            disabled={loading}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            required\r\n          ></input>\r\n          <input\r\n            disabled={loading}\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            required\r\n          ></input>\r\n          <input\r\n            disabled={loading}\r\n            onChange={(e) => setImage(e.target.value)}\r\n            value={image}\r\n            type=\"url\"\r\n            placeholder=\"picture url\"\r\n            required\r\n          ></input>\r\n          <button disabled={loading} type=\"submit\">\r\n            {loading ? <>Signing Up...</> : <>Sign Up</>}\r\n          </button>\r\n        </Form>\r\n        <StyledLink to=\"/\">\r\n          <p>Switch back to log in</p>\r\n        </StyledLink>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  @media (max-width: 740px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst Introduction = styled.div`\r\n  height: 100%;\r\n  width: 60vw;\r\n  background-color: #151515;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  box-shadow: 4px 0px 4px rgba(0, 0, 0, 0.25);\r\n  padding-left: 5vw;\r\n  padding-right: 20px;\r\n\r\n  .page-title {\r\n    font-family: Passion One;\r\n    font-size: 106px;\r\n    line-height: 117px;\r\n    letter-spacing: 0.05em;\r\n  }\r\n  .page-subtitle {\r\n    max-width: 445px;\r\n    font-family: Oswald;\r\n    font-size: 43px;\r\n    line-height: 64px;\r\n  }\r\n\r\n  @media (max-width: 740px) {\r\n    width: 100%;\r\n    height: 165px;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 10px 0px 0px;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    padding-bottom: 30px;\r\n\r\n    .page-title {\r\n      margin: 0px auto;\r\n      font-size: 76px;\r\n      line-height: 76px;\r\n      letter-spacing: 0.05em;\r\n    }\r\n    .page-subtitle {\r\n      margin: 0px auto;\r\n      max-width: 240px;\r\n      font-size: 23px;\r\n      line-height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  width: 40vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-right: 4%;\r\n  padding-left: 4%;\r\n\r\n  @media (max-width: 740px) {\r\n    padding-right: 8%;\r\n    padding-left: 8%;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  font-family: Oswald;\r\n  font-weight: bold;\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 65px;\r\n    background-color: #ffffff;\r\n    border-radius: 6px;\r\n    padding: 15px;\r\n    color: #151515;\r\n    border: none;\r\n    margin-bottom: 13px;\r\n    font-size: 27px;\r\n    line-height: 40px;\r\n  }\r\n  input:disabled {\r\n    filter: brightness(0.7);\r\n  }\r\n  input::placeholder {\r\n    font-size: 27px;\r\n    line-height: 40px;\r\n    color: #9f9f9f;\r\n  }\r\n  button {\r\n    width: 100%;\r\n    height: 65px;\r\n    background: #1877f2;\r\n    border-radius: 6px;\r\n    border: none;\r\n    font-size: 27px;\r\n    line-height: 40px;\r\n    color: #ffffff;\r\n  }\r\n  button:disabled {\r\n    filter: brightness(0.7);\r\n  }\r\n\r\n  @media (max-width: 740px) {\r\n    margin-top: 20px;\r\n\r\n    input {\r\n      height: 55px;\r\n      font-size: 22px;\r\n      line-height: 33px;\r\n    }\r\n    input::placeholder {\r\n      font-size: 22px;\r\n      line-height: 33px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-top: 10px;\r\n  opacity: ${(props) => (props.disabled ? \"0.7\" : \"1\")};\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"auto\")};\r\n  p {\r\n    font-family: Lato;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 20px;\r\n    line-height: 24px;\r\n    text-decoration-line: underline;\r\n    color: #ffffff;\r\n  }\r\n\r\n  @media (max-width: 740px) {\r\n    font-size: 17px;\r\n    line-height: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\LikedPosts\\LikedPosts.js",["141"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\n\r\nexport default function LikedPosts() {\r\n  const [posts, setPosts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    if (earlier || reset) {\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/liked`;\r\n    if (posts && posts.length > 0) {\r\n      url = `${url}?offset=${posts.length}`;\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      refreshPosts = posts\r\n        ? [...posts, ...response.data.posts]\r\n        : [...response.data.posts];\r\n      if (response.data.posts.length < 10) {\r\n        setHasMore(false);\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1>my likes</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === null ? (\r\n            error ? (\r\n              <p className=\"warning\">\r\n                Could not get posts right now. Please try again.\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">No liked posts yet!</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Header\\Header.js",["142"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nexport default function Header() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (!user) {\r\n      if (localStorage.user) {\r\n        const userStorage = JSON.parse(localStorage.user);\r\n        setUser(userStorage);\r\n        return;\r\n      } else {\r\n        history.push(\"/\");\r\n        return;\r\n      }\r\n    }\r\n    if (user) {\r\n      setAvatar(user ? user.avatar : \"\");\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 500);\r\n      return;\r\n    }\r\n  }, [user]);\r\n\r\n  function toggleMenu(e) {\r\n    e.stopPropagation();\r\n    setIsMenuOpen(!isMenuOpen);\r\n  }\r\n\r\n  function logOut() {\r\n    localStorage.removeItem(\"user\");\r\n    setUser(\"\");\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LoadingOverlay user={user} isLoading={isLoading} />\r\n      <StyledHeader>\r\n        <Link\r\n          to=\"/timeline\"\r\n          onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        >\r\n          <Logo>linkr</Logo>\r\n        </Link>\r\n        <ShowMenuButton onClick={toggleMenu}>\r\n          <Chevron isMenuOpen={isMenuOpen} /> <UserImage avatar={avatar} />\r\n        </ShowMenuButton>\r\n      </StyledHeader>\r\n      <HeaderOverlay isMenuOpen={isMenuOpen} onClick={toggleMenu} />\r\n      <ContentOverlay isMenuOpen={isMenuOpen} onClick={toggleMenu} />\r\n      <Menu isMenuOpen={isMenuOpen}>\r\n        <li onClick={toggleMenu}>\r\n          <Link to=\"/my-posts\">My Posts</Link>\r\n        </li>\r\n        <li onClick={toggleMenu}>\r\n          <Link to=\"/my-likes\">My Likes</Link>\r\n        </li>\r\n        <li onClick={toggleMenu}>\r\n          <div onClick={logOut}>Logout</div>\r\n        </li>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\nconst LoadingOverlay = styled.div`\r\n  top: 0;\r\n  bottom: 0px;\r\n  left: 0;\r\n  right: 0;\r\n  transition: 0.5s;\r\n  z-index: 10;\r\n  position: fixed;\r\n  background-color: #333333;\r\n  opacity: ${(props) => (props.user ? \"0\" : \"1\")};\r\n  display: ${(props) => (props.isLoading ? \"block\" : \"none\")};\r\n`;\r\nconst Logo = styled.h1`\r\n  font-family: Passion One;\r\n  font-weight: bold;\r\n  font-size: 49px;\r\n  letter-spacing: 2px;\r\n`;\r\nconst ContentOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: ${(props) => (props.isMenuOpen ? \"block\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n`;\r\nconst UserImage = styled.div`\r\n  border-radius: 50%;\r\n  margin-left: 26px;\r\n  width: 53px;\r\n  height: 53px;\r\n  background-image: url(\"${(props) => props.avatar}\");\r\n  background-color: #4d4d4d;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\nconst StyledHeader = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 72px;\r\n  padding: 0px 16px;\r\n  background-color: #151515;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 3;\r\n`;\r\nconst HeaderOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 130px;\r\n  height: 72px;\r\n  display: ${(props) => (props.isMenuOpen ? \"block\" : \"none\")};\r\n  z-index: 4;\r\n`;\r\n\r\nconst ShowMenuButton = styled.button`\r\n  height: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Chevron = styled.div`\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  transform: rotate(${(props) => (props.isMenuOpen ? \"225\" : \"45\")}deg);\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  background-color: #151515;\r\n  width: 150px;\r\n  position: fixed;\r\n  top: ${(props) => (props.isMenuOpen ? \"72px\" : \"-50px\")};\r\n  right: -20px;\r\n  transition: 0.5s;\r\n  font-weight: bold;\r\n  font-size: 17px;\r\n  line-height: 20px;\r\n  border-radius: 0px 0px 20px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding-right: 20px;\r\n  z-index: 2;\r\n  li {\r\n    width: 100%;\r\n    div,\r\n    a {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      height: 100%;\r\n      width: 100%;\r\n      padding: 5px 0px 10px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\HashtagPage\\HashtagPage.js",["143","144"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\nimport useInterval from \"../useInterval/useInterval\";\r\n\r\nexport default function HashtagPage() {\r\n  const [posts, setPosts] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const { user } = useContext(UserContext);\r\n  const { hashtag } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts(true, true);\r\n      setIsLoading(true);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [hashtag]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/hashtags/${hashtag}/posts`;\r\n    let referenceId;\r\n    if (!reset) {\r\n      if (earlier) {\r\n        if (posts) {\r\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\r\n          url = `${url}?earlierThan=${referenceId}`;\r\n        }\r\n      } else {\r\n        if (posts && posts.length > 0) {\r\n          referenceId = posts[posts.length - 1].repostId\r\n            ? posts[posts.length - 1].repostId\r\n            : posts[posts.length - 1].id;\r\n          url = `${url}?olderThan=${referenceId}`;\r\n        }\r\n      }\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      if (earlier && !reset) {\r\n        if (posts) {\r\n          refreshPosts = [...response.data.posts, ...posts];\r\n        } else {\r\n          refreshPosts = [...response.data.posts];\r\n        }\r\n      } else {\r\n        if (reset) {\r\n          refreshPosts = [...response.data.posts];\r\n        } else {\r\n          refreshPosts = posts\r\n            ? [...posts, ...response.data.posts]\r\n            : [...response.data.posts];\r\n        }\r\n        if (response.data.posts.length < 10) {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (hasMore) {\r\n      getPosts(true);\r\n    }\r\n  }, 15000);\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1># {hashtag}</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === undefined ? (\r\n            error ? (\r\n              <p className=\"warning\">Error getting posts, please try again.</p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">No posts with this hashtag.</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\Timeline.js",["145"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport PostsList from \"./PostsList\";\r\nimport useInterval from \"../useInterval/useInterval\";\r\n\r\nexport default function Timeline() {\r\n  const [posts, setPosts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/following/posts`;\r\n    let referenceId;\r\n    if (!reset) {\r\n      if (earlier) {\r\n        if (posts) {\r\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\r\n          url = `${url}?earlierThan=${referenceId}`;\r\n        }\r\n      } else {\r\n        if (posts && posts.length > 0) {\r\n          referenceId = posts[posts.length - 1].repostId\r\n            ? posts[posts.length - 1].repostId\r\n            : posts[posts.length - 1].id;\r\n          url = `${url}?olderThan=${referenceId}`;\r\n        }\r\n      }\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      if (earlier && !reset) {\r\n        if (posts) {\r\n          refreshPosts = [...response.data.posts, ...posts];\r\n        } else {\r\n          refreshPosts = [...response.data.posts];\r\n        }\r\n      } else {\r\n        if (reset) {\r\n          refreshPosts = [...response.data.posts];\r\n        } else {\r\n          refreshPosts = posts\r\n            ? [...posts, ...response.data.posts]\r\n            : [...response.data.posts];\r\n        }\r\n        if (response.data.posts.length < 10) {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  useInterval(() => {\r\n    getPosts(true);\r\n  }, 15000);\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1>timeline</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          <CreatePost getPosts={getPosts} user={user} />\r\n          {isLoading ? <Loading /> : \"\"}\r\n          {posts === null ? (\r\n            error ? (\r\n              <p className=\"warning\">\r\n                Could not get posts right now. Please try again.\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">You still don't follow anyone!</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\MyPosts\\MyPosts.js",["146"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\nimport useInterval from \"../useInterval/useInterval\";\r\n\r\nexport default function MyPosts() {\r\n  const [posts, setPosts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/${user.id}/posts`;\r\n    let referenceId;\r\n    if (!reset) {\r\n      if (earlier) {\r\n        if (posts) {\r\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\r\n          url = `${url}?earlierThan=${referenceId}`;\r\n        }\r\n      } else {\r\n        if (posts && posts.length > 0) {\r\n          referenceId = posts[posts.length - 1].repostId\r\n            ? posts[posts.length - 1].repostId\r\n            : posts[posts.length - 1].id;\r\n          url = `${url}?olderThan=${referenceId}`;\r\n        }\r\n      }\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      if (earlier && !reset) {\r\n        if (posts) {\r\n          refreshPosts = [...response.data.posts, ...posts];\r\n        } else {\r\n          refreshPosts = [...response.data.posts];\r\n        }\r\n      } else {\r\n        if (reset) {\r\n          refreshPosts = [...response.data.posts];\r\n        } else {\r\n          refreshPosts = posts\r\n            ? [...posts, ...response.data.posts]\r\n            : [...response.data.posts];\r\n        }\r\n        if (response.data.posts.length < 10) {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  useInterval(() => {\r\n    getPosts(true);\r\n  }, 15000);\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1>my posts</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === null ? (\r\n            error ? (\r\n              <p className=\"warning\">\r\n                Could not get posts right now. Please try again.\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">You have not posted yet!</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Trending\\Trending.js",["147","148","149"],"import axios from \"axios\";\r\nimport { useEffect, useContext, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nexport default function Trending() {\r\n  const { user } = useContext(UserContext);\r\n  const [trending, setTrending] = useState([]);\r\n  const [requestError, setRequestError] = useState(false);\r\n  const [hashtag, setHashtag] = useState(\"\");\r\n  const history = useHistory();\r\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getTrending();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (Date.now() - lastUpdate > 60000) {\r\n      setLastUpdate(Date.now());\r\n      getTrending();\r\n    }\r\n  }, [location]);\r\n\r\n  function getTrending() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.get(\r\n      \"https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/hashtags/trending\",\r\n      config\r\n    );\r\n    request.then((response) => {\r\n      setTrending(response.data.hashtags);\r\n      setRequestError(false);\r\n    });\r\n    setRequestError(false);\r\n    request.catch(() => {\r\n      setRequestError(true);\r\n    });\r\n  }\r\n\r\n  function goToHashtag(e) {\r\n    e.preventDefault();\r\n    if (!hashtag) {\r\n      return;\r\n    }\r\n    history.push(`/hashtag/${hashtag}`);\r\n  }\r\n\r\n  return (\r\n    <TrendingContainer>\r\n      <div>\r\n        <p className=\"title\">trending</p>\r\n        <ContainerList>\r\n          {!requestError ? (\r\n            trending.length > 0 ? (\r\n              trending.map((item) => (\r\n                <Link key={item.id} to={`/hashtag/${item.name}`}>\r\n                  # {item.name}\r\n                </Link>\r\n              ))\r\n            ) : (\r\n              <>Loading...</>\r\n            )\r\n          ) : (\r\n            <a href=\"#\" onClick={getTrending}>\r\n              <p>Could not get trending.</p>\r\n              <p>Try again?</p>\r\n            </a>\r\n          )}\r\n        </ContainerList>\r\n        <form onSubmit={goToHashtag}>\r\n          <span>#</span>\r\n          <input\r\n            value={hashtag}\r\n            onChange={(e) => setHashtag(e.target.value.replace(/[\\W_]+/, \"\"))}\r\n            type=\"text\"\r\n            placeholder=\"type a hashtag\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </TrendingContainer>\r\n  );\r\n}\r\n\r\nconst TrendingContainer = styled.div`\r\n  position: fixed;\r\n  top: 232px;\r\n  right: calc((100% - 945px) / 2 + 5px);\r\n  & > div {\r\n    font-weight: bold;\r\n    width: 300px;\r\n    background-color: #171717;\r\n    border-radius: 16px;\r\n\r\n    .title {\r\n      font-family: \"Oswald\", sans-serif;\r\n      font-size: 27px;\r\n      line-height: 40px;\r\n      height: 60px;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0px 16px;\r\n      border-bottom: 1px solid #484848;\r\n    }\r\n    form {\r\n      padding: 0px 16px 15px;\r\n      display: flex;\r\n      align-items: center;\r\n      span {\r\n        position: absolute;\r\n        font-size: 19px;\r\n        left: 29px;\r\n      }\r\n      input {\r\n        font-family: Lato;\r\n        font-weight: normal;\r\n        font-size: 16px;\r\n        letter-spacing: 0.05em;\r\n        color: white;\r\n        height: 35px;\r\n        background: #252525;\r\n        border-radius: 8px;\r\n        width: 100%;\r\n        border: none;\r\n        padding: 0px 12px 0px 36px;\r\n      }\r\n      input::placeholder {\r\n        color: #575757;\r\n        font-style: italic;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  @media (max-height: 640px) {\r\n    top: initial;\r\n    bottom: 0;\r\n  }\r\n  @media (max-width: 950px) {\r\n    right: 5px;\r\n  }\r\n  @media (max-width: 740px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ContainerList = styled.div`\r\n  font-family: \"Lato\", sans-serif;\r\n  font-size: 19px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.05em;\r\n  padding: 24px 16px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 330px;\r\n  a {\r\n    margin-bottom: 5px;\r\n    width: fit-content;\r\n  }\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\UserPage\\UserPage.js",["150","151"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\n\r\nimport styled from \"styled-components\";\r\nimport useInterval from \"../useInterval/useInterval\";\r\n\r\nexport default function UserPage() {\r\n  const [posts, setPosts] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const { user } = useContext(UserContext);\r\n  const { userId } = useParams();\r\n\r\n  const [displayButton, setDisplayButton] = useState(true);\r\n  const [following, setFollowing] = useState(false);\r\n  const [loadingFollow, setLoadingFollow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.id === Number(userId)) {\r\n        setDisplayButton(false);\r\n      }\r\n      setIsLoading(true);\r\n      setUserInfo(\"\");\r\n      setPosts();\r\n      getInfo();\r\n      getPosts();\r\n      getFollows();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setIsLoading(true);\r\n      getInfo();\r\n      getFollows();\r\n      getPosts(true, true);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [userId]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/${userId}/posts`;\r\n    let referenceId;\r\n    if (!reset) {\r\n      if (earlier) {\r\n        if (posts) {\r\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\r\n          url = `${url}?earlierThan=${referenceId}`;\r\n        }\r\n      } else {\r\n        if (posts && posts.length > 0) {\r\n          referenceId = posts[posts.length - 1].repostId\r\n            ? posts[posts.length - 1].repostId\r\n            : posts[posts.length - 1].id;\r\n          url = `${url}?olderThan=${referenceId}`;\r\n        }\r\n      }\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      if (earlier && !reset) {\r\n        if (posts) {\r\n          refreshPosts = [...response.data.posts, ...posts];\r\n        } else {\r\n          refreshPosts = [...response.data.posts];\r\n        }\r\n      } else {\r\n        if (reset) {\r\n          refreshPosts = [...response.data.posts];\r\n        } else {\r\n          refreshPosts = posts\r\n            ? [...posts, ...response.data.posts]\r\n            : [...response.data.posts];\r\n        }\r\n        if (response.data.posts.length < 10) {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (hasMore) {\r\n      getPosts(true);\r\n    }\r\n  }, 15000);\r\n\r\n  function getInfo() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/${userId}`,\r\n      config\r\n    );\r\n    request.then((response) => {\r\n      setUserInfo(response.data.user);\r\n    });\r\n    request.catch((error) => {\r\n      alert(error.response.data.message);\r\n    });\r\n  }\r\n\r\n  function getFollows() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/follows`,\r\n      config\r\n    );\r\n    request.then((response) => {\r\n      const userFollows = response.data.users.filter(\r\n        (item) => item.id === Number(userId)\r\n      );\r\n      if (userFollows.length > 0) {\r\n        setFollowing(true);\r\n      } else {\r\n        setFollowing(false);\r\n      }\r\n    });\r\n    request.catch((error) => {\r\n      alert(error.response.data.message);\r\n    });\r\n  }\r\n  function follow() {\r\n    setLoadingFollow(true);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.post(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/${userId}/follow`,\r\n      {},\r\n      config\r\n    );\r\n    request.then(() => {\r\n      setFollowing(true);\r\n      setLoadingFollow(false);\r\n    });\r\n    request.catch((error) => {\r\n      setLoadingFollow(false);\r\n      alert(`Operation not possible due to ${error.response.data.message}.`);\r\n    });\r\n  }\r\n  function unfollow() {\r\n    setLoadingFollow(true);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.post(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/${userId}/unfollow`,\r\n      {},\r\n      config\r\n    );\r\n    request.then(() => {\r\n      setFollowing(false);\r\n      setLoadingFollow(false);\r\n    });\r\n    request.catch((error) => {\r\n      alert(`Operation not possible due to ${error.response.data.message}.`);\r\n      setLoadingFollow(false);\r\n    });\r\n  }\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n  return (\r\n    <StyledTimeline>\r\n      <Introduction>\r\n        <div>\r\n          <Avatar url={userInfo && userInfo.avatar} />\r\n          {userInfo && <h1>{userInfo.username}'s posts</h1>}\r\n        </div>\r\n        <FollowButton\r\n          onClick={following ? unfollow : follow}\r\n          followinguser={following}\r\n          show={displayButton}\r\n          disabled={loadingFollow}\r\n        >\r\n          {following ? \"Unfollow\" : \"Follow\"}\r\n        </FollowButton>\r\n      </Introduction>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === null || posts === undefined ? (\r\n            error ? (\r\n              <p className=\"warning\">\r\n                Could not get posts right now. Please try again.\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">This person has not posted yet!</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n\r\nconst Introduction = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 44px;\r\n\r\n  > div {\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    padding-left: 20px;\r\n    overflow-wrap: break-word;\r\n    word-wrap: break-word;\r\n  }\r\n  > div div {\r\n    margin-right: 18px;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    overflow-wrap: break-word;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n  }\r\n  @media (max-width: 740px) {\r\n    margin-left: 10px;\r\n\r\n    > div {\r\n      padding-left: 0px;\r\n    }\r\n    > div div {\r\n      margin-right: 0;\r\n      flex-shrink: 0;\r\n    }\r\n    h1 {\r\n      padding-right: 5px;\r\n    }\r\n    button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst FollowButton = styled.button`\r\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\r\n  width: 112px;\r\n  height: 31px;\r\n  background: ${(props) => (props.followinguser ? \"white\" : \"#1877F2\")};\r\n  border-radius: 5px;\r\n  border: none;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  color: ${(props) => (props.followinguser ? \"#1877F2\" : \"white\")};\r\n  font-family: Lato;\r\n  flex-shrink: 0;\r\n  cursor: pointer;\r\n\r\n  :disabled {\r\n    filter: brightness(0.7);\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  background-image: url(${(props) => props.url});\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 26.5px;\r\n  background-size: cover;\r\n  background-position: center;\r\n  top: 0;\r\n  right: 0;\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\StyledTimeline.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\CreatePost.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\PostsList.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Loading\\Loading.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\useInterval\\useInterval.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\LocationButton.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\Post.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Styles\\PostStyle.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\EditButton.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\DeleteButton.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\RepostButton.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\EditArea.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Timeline\\LocationIndicator.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Likes\\Likes.js",["152"],"import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { BiHeart } from \"react-icons/bi\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nexport default function Likes({ post }) {\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const initialLikes = post.likes.map((item) => {\r\n    return {\r\n      id: item[\"user.id\"],\r\n      username: item[\"user.username\"],\r\n    };    \r\n  });\r\n\r\n  const [likes, setLikes] = useState(initialLikes);\r\n\r\n  const [tooltip, setTooltip] = useState(\"\");\r\n  function likeThis() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.post(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/like`,\r\n      {},\r\n      config\r\n    );\r\n    request.then((response) => {\r\n      const newLikes = response.data.post.likes.map((item) => {\r\n        return {\r\n          id: item.userId,\r\n          username: item.username,\r\n        };\r\n      });\r\n      setLikes(newLikes);\r\n    });\r\n    request.catch(() => alert(\"Error setting likes\"));\r\n  }\r\n  function dislikeThis() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const request = axios.post(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/dislike`,\r\n      {},\r\n      config\r\n    );\r\n    request.then((response) => {\r\n      const newLikes = response.data.post.likes.map((item) => {\r\n        return {\r\n          id: item.userId,\r\n          username: item.username,\r\n        };\r\n      });\r\n      setLikes(newLikes);\r\n    });\r\n    request.catch(() => alert(\"Error setting likes\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTooltip();\r\n  }, [likes]);\r\n\r\n\r\n  function getTooltip() {\r\n    const notMe = likes.filter((item) => item.id !== user.id);\r\n    const namesNotMine = notMe.map((item) => item.username);\r\n    if (likes.filter((item) => item.id === user.id).length > 0) {\r\n      if (namesNotMine.length === 0) {\r\n        setTooltip(\"You\");\r\n      }\r\n      if (namesNotMine.length === 1) {\r\n        setTooltip(\"You and \" + namesNotMine[0]);\r\n      } else if (namesNotMine.length === 2) {\r\n        setTooltip(\"You, \" + namesNotMine[0] + \" and another person\");\r\n      } else if (namesNotMine.length > 2) {\r\n        setTooltip(\r\n          \"You, \" +\r\n            namesNotMine[0] +\r\n            \" and \" +\r\n            (likes.length - 2) +\r\n            \" other people\"\r\n        );\r\n      }\r\n    } else {\r\n      if (namesNotMine.length === 0) {\r\n        setTooltip(null);\r\n      }\r\n      if (namesNotMine.length === 1) {\r\n        setTooltip(namesNotMine[0]);\r\n      } else if (namesNotMine.length === 2) {\r\n        setTooltip(namesNotMine[0] + \" e \" + namesNotMine[1]);\r\n      } else if (namesNotMine.length === 3) {\r\n        setTooltip(\r\n          namesNotMine[0] + \", \" + namesNotMine[1] + \", and another person\"\r\n        );\r\n      } else if (namesNotMine.length > 3) {\r\n        setTooltip(\r\n          namesNotMine[0] +\r\n            \", \" +\r\n            namesNotMine[1] +\r\n            \", and \" +\r\n            (likes.length - 2) +\r\n            \" other people\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      {likes.filter((item) => item.id === user.id).length > 0 ? (\r\n        <FaHeart color=\"red\" onClick={dislikeThis} />\r\n      ) : (\r\n        <BiHeart onClick={likeThis} />\r\n      )}\r\n      <LikesCounter data-tip={tooltip}>\r\n        {likes.length} {likes.length > 1 ? \"likes\" : \"like\"}\r\n      </LikesCounter>\r\n      <ReactTooltip place=\"bottom\" type=\"light\" effect=\"solid\" />\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst LikesCounter = styled.div`\r\n  margin-top: 5px;\r\n  font-size: 11px;\r\n  line-height: 13px;\r\n  color: #fff;\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CommentsButton.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CommentsSection.js",["153"],"import axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport CreateComment from \"./CreateComment\";\r\nimport Avatar from \"./Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CommentSection({ post, setCounter }) {\r\n  const { user } = useContext(UserContext);\r\n  const [comments, setComments] = useState([]);\r\n  const [following, setFollowing] = useState([]);\r\n  const commentsRef = useRef();\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n    getFollowing();\r\n  }, []);\r\n\r\n  function getComments() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const commentsRequest = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/comments`,\r\n      config\r\n    );\r\n    commentsRequest.then((response) => {\r\n      setComments(response.data.comments);\r\n      setCounter(response.data.comments.length);\r\n      focusComments();\r\n    });\r\n    commentsRequest.catch(() => {\r\n      alert(\"Could not get comments\");\r\n    });\r\n  }\r\n\r\n  function getFollowing() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const followingRequest = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/follows`,\r\n      config\r\n    );\r\n    followingRequest.then((response) => {\r\n      const ids = response.data.users.map((user) => user.id);\r\n      setFollowing(ids);\r\n    });\r\n    followingRequest.catch(() => {\r\n      alert(\"Could not get who you follow\");\r\n    });\r\n  }\r\n\r\n  function focusComments() {\r\n    commentsRef.current.scrollTo({\r\n      top: commentsRef.current.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n    setTimeout(() => {\r\n      inputRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\",\r\n        inline: \"start\",\r\n      });\r\n    }, 500);\r\n  }\r\n  return (\r\n    <StyledCommentsSection initial={!comments.length}>\r\n      <div ref={commentsRef} className=\"comments\">\r\n        {comments.length === 0 ? (\r\n          post.commentCount !== 0 ? (\r\n            <div className=\"comment-box\">Loading...</div>\r\n          ) : (\r\n            <div className=\"comment-box\">No comments yet</div>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {comments.map((comment) => {\r\n          return (\r\n            <div className=\"comment-box\" key={comment.id}>\r\n              <Avatar avatar={comment.user.avatar} id={comment.user.id} />\r\n              <div>\r\n                <p>\r\n                  <Link to={`/user/${comment.user.id}`}>\r\n                    {comment.user.username}\r\n                  </Link>\r\n                  <span>\r\n                    {post.user.id === comment.user.id && \" • post's author\"}\r\n                    {following.includes(comment.user.id) && \" • following\"}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment\">{comment.text}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <CreateComment\r\n        inputRef={inputRef}\r\n        post={post}\r\n        getComments={getComments}\r\n      />\r\n    </StyledCommentsSection>\r\n  );\r\n}\r\n\r\nconst StyledCommentsSection = styled.div`\r\n  width: 100%;\r\n  max-height: ${(props) => (props.initial ? \"140px\" : \"600px\")};\r\n  padding: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  transition: 0.5s;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  .comments {\r\n    overflow-y: auto;\r\n    max-height: ${(props) => (props.initial ? \"140px\" : \"420px\")};\r\n\r\n    .comment-box {\r\n      padding: 0px 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      min-height: 70px;\r\n      border-bottom: 1px solid #353535;\r\n      p {\r\n        margin-bottom: 3px;\r\n      }\r\n      a {\r\n        font-weight: bold;\r\n      }\r\n      span {\r\n        color: #565656;\r\n      }\r\n      .comment {\r\n        color: #acacac;\r\n        word-break: break-word;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\CreateComment.js",[],"C:\\Users\\lucas\\Desktop\\projetos-react\\linkr\\src\\components\\Comments\\Avatar.js",[],{"ruleId":"154","severity":1,"message":"155","line":23,"column":6,"nodeType":"156","endLine":23,"endColumn":12,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":20,"column":6,"nodeType":"156","endLine":20,"endColumn":12,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"155","line":30,"column":6,"nodeType":"156","endLine":30,"endColumn":12,"suggestions":"160"},{"ruleId":"154","severity":1,"message":"158","line":23,"column":6,"nodeType":"156","endLine":23,"endColumn":12,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"162","line":31,"column":6,"nodeType":"156","endLine":31,"endColumn":15,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"158","line":22,"column":6,"nodeType":"156","endLine":22,"endColumn":12,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"158","line":21,"column":6,"nodeType":"156","endLine":21,"endColumn":12,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":20,"column":6,"nodeType":"156","endLine":20,"endColumn":12,"suggestions":"167"},{"ruleId":"154","severity":1,"message":"168","line":27,"column":6,"nodeType":"156","endLine":27,"endColumn":16,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":73,"column":13,"nodeType":"172","endLine":73,"endColumn":47},{"ruleId":"154","severity":1,"message":"173","line":38,"column":6,"nodeType":"156","endLine":38,"endColumn":12,"suggestions":"174"},{"ruleId":"154","severity":1,"message":"175","line":48,"column":6,"nodeType":"156","endLine":48,"endColumn":14,"suggestions":"176"},{"ruleId":"154","severity":1,"message":"177","line":69,"column":6,"nodeType":"156","endLine":69,"endColumn":13,"suggestions":"178"},{"ruleId":"154","severity":1,"message":"179","line":19,"column":6,"nodeType":"156","endLine":19,"endColumn":8,"suggestions":"180"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["182"],["183"],["184"],"React Hook useEffect has missing dependencies: 'getPosts' and 'user'. Either include them or remove the dependency array.",["185"],["186"],["187"],"React Hook useEffect has a missing dependency: 'getTrending'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'getTrending' and 'lastUpdate'. Either include them or remove the dependency array.",["189"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getFollows', 'getInfo', 'getPosts', and 'userId'. Either include them or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'getFollows', 'getInfo', 'getPosts', and 'user'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'getTooltip'. Either include it or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'getComments' and 'getFollowing'. Either include them or remove the dependency array.",["193"],{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"194","fix":"198"},{"desc":"196","fix":"199"},{"desc":"200","fix":"201"},{"desc":"196","fix":"202"},{"desc":"196","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [history, setUser, user]",{"range":"215","text":"216"},"Update the dependencies array to be: [getPosts, user]",{"range":"217","text":"218"},{"range":"219","text":"216"},{"range":"220","text":"218"},"Update the dependencies array to be: [getPosts, hashtag, user]",{"range":"221","text":"222"},{"range":"223","text":"218"},{"range":"224","text":"218"},"Update the dependencies array to be: [getTrending, user]",{"range":"225","text":"226"},"Update the dependencies array to be: [getTrending, lastUpdate, location]",{"range":"227","text":"228"},"Update the dependencies array to be: [getFollows, getInfo, getPosts, user, userId]",{"range":"229","text":"230"},{"range":"231","text":"230"},"Update the dependencies array to be: [getTooltip, likes]",{"range":"232","text":"233"},"Update the dependencies array to be: [getComments, getFollowing]",{"range":"234","text":"235"},[774,780],"[history, setUser, user]",[642,648],"[getPosts, user]",[899,905],[773,779],[947,956],"[getPosts, hashtag, user]",[725,731],[694,700],[694,700],"[getTrending, user]",[839,849],"[getTrending, lastUpdate, location]",[1235,1241],"[getFollows, getInfo, getPosts, user, userId]",[1448,1456],[1887,1894],"[getTooltip, likes]",[654,656],"[getComments, getFollowing]"]