{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\projetos-react\\\\linkr\\\\src\\\\components\\\\Comments\\\\CreateComment.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { IoPaperPlaneOutline } from \"react-icons/io5\";\nimport styled from \"styled-components\";\nimport { useContext, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContexts\";\nimport Avatar from \"./Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentSection({\n  post,\n  getComments,\n  inputRef\n}) {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [comment, setComment] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function sendComment(e) {\n    e.preventDefault();\n\n    if (!comment.trim()) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setIsLoading(true);\n    const body = {\n      text: comment.trim()\n    };\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const postComment = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/comment`, body, config);\n    postComment.then(() => {\n      setComment(\"\");\n      getComments();\n      setIsLoading(false);\n      inputRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"start\"\n      });\n    });\n    postComment.catch(() => {\n      alert(\"Could not post comment at this time\");\n      setIsLoading(false);\n      inputRef.current.focus();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CreateCommentContainer, {\n    onSubmit: sendComment,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      avatar: user.avatar,\n      id: user.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      placeholder: \"write a comment...\",\n      disabled: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading,\n      children: /*#__PURE__*/_jsxDEV(IoPaperPlaneOutline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentSection, \"XcnXpLkQWNmDdK97ynUM5oBkUxE=\");\n\n_c = CommentSection;\nconst CreateCommentContainer = styled.form`\n  min-height: 70px;\n  padding: 0px 20px;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  position: relative;\n  input {\n    width: 100%;\n    height: 40px;\n    background: #252525;\n    border-radius: 8px;\n    border: none;\n    color: #acacac;\n    padding: 0px 40px 0px 15px;\n  }\n  input::placeholder {\n    font-style: italic;\n    color: #575757;\n  }\n\n  button {\n    border: none;\n    background-color: transparent;\n    color: #f3f3f3;\n    position: absolute;\n    right: 24px;\n    font-size: 22px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  input:disabled,\n  button:disabled {\n    filter: brightness(0.5);\n  }\n`;\n_c2 = CreateCommentContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentSection\");\n$RefreshReg$(_c2, \"CreateCommentContainer\");","map":{"version":3,"sources":["C:/Users/lucas/Desktop/projetos-react/linkr/src/components/Comments/CreateComment.js"],"names":["axios","IoPaperPlaneOutline","styled","useContext","useState","UserContext","Avatar","CommentSection","post","getComments","inputRef","user","comment","setComment","isLoading","setIsLoading","sendComment","e","preventDefault","trim","current","focus","body","text","config","headers","Authorization","token","postComment","id","then","scrollIntoView","behavior","block","inline","catch","alert","avatar","target","value","CreateCommentContainer","form"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { IoPaperPlaneOutline } from \"react-icons/io5\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport Avatar from \"./Avatar\";\r\n\r\nexport default function CommentSection({ post, getComments, inputRef }) {\r\n  const { user } = useContext(UserContext);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function sendComment(e) {\r\n    e.preventDefault();\r\n    if (!comment.trim()) {\r\n      inputRef.current.focus();\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const body = { text: comment.trim() };\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const postComment = axios.post(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/comment`,\r\n      body,\r\n      config\r\n    );\r\n    postComment.then(() => {\r\n      setComment(\"\");\r\n      getComments();\r\n      setIsLoading(false);\r\n      inputRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\",\r\n        inline: \"start\",\r\n      });\r\n    });\r\n    postComment.catch(() => {\r\n      alert(\"Could not post comment at this time\");\r\n      setIsLoading(false);\r\n      inputRef.current.focus();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CreateCommentContainer onSubmit={sendComment}>\r\n      <Avatar avatar={user.avatar} id={user.id} />\r\n      <input\r\n        ref={inputRef}\r\n        value={comment}\r\n        onChange={(e) => setComment(e.target.value)}\r\n        placeholder={\"write a comment...\"}\r\n        disabled={isLoading}\r\n      ></input>\r\n      <button disabled={isLoading}>\r\n        <IoPaperPlaneOutline />\r\n      </button>\r\n    </CreateCommentContainer>\r\n  );\r\n}\r\n\r\nconst CreateCommentContainer = styled.form`\r\n  min-height: 70px;\r\n  padding: 0px 20px;\r\n  width: 100%;\r\n  border: none;\r\n  background-color: transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  input {\r\n    width: 100%;\r\n    height: 40px;\r\n    background: #252525;\r\n    border-radius: 8px;\r\n    border: none;\r\n    color: #acacac;\r\n    padding: 0px 40px 0px 15px;\r\n  }\r\n  input::placeholder {\r\n    font-style: italic;\r\n    color: #575757;\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    background-color: transparent;\r\n    color: #f3f3f3;\r\n    position: absolute;\r\n    right: 24px;\r\n    font-size: 22px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  input:disabled,\r\n  button:disabled {\r\n    filter: brightness(0.5);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}