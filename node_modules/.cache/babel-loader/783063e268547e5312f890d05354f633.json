{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\projetos-react\\\\linkr\\\\src\\\\components\\\\LikedPosts\\\\LikedPosts.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContexts\";\nimport Loading from \"../Loading/Loading\";\nimport StyledTimeline from \"../Styles/StyledTimeline\";\nimport PostsList from \"../Timeline/PostsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LikedPosts() {\n  _s();\n\n  const [posts, setPosts] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (user) {\n      getPosts();\n    }\n  }, [user]);\n\n  function getPosts(earlier, reset) {\n    if (earlier || reset) {\n      return;\n    }\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/liked`;\n\n    if (posts && posts.length > 0) {\n      url = `${url}?offset=${posts.length}`;\n    }\n\n    const request = axios.get(url, config);\n    let refreshPosts;\n    request.then(response => {\n      refreshPosts = posts ? [...posts, ...response.data.posts] : [...response.data.posts];\n\n      if (response.data.posts.length < 10) {\n        setHasMore(false);\n      }\n\n      setPosts(refreshPosts);\n      setIsLoading(false);\n    });\n    request.catch(() => {\n      setHasMore(false);\n      setIsLoading(false);\n      setError(true);\n    });\n  }\n\n  function removePost(repost, id) {\n    let filteredPosts = [];\n\n    if (repost) {\n      filteredPosts = posts.filter(p => p.repostId !== id);\n    } else {\n      filteredPosts = posts.filter(p => p.id !== id);\n    }\n\n    const refreshPosts = [...filteredPosts];\n    setPosts(refreshPosts);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledTimeline, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"my likes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-left\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : posts === null ? error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"Could not get posts right now. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) : \"\" : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"No liked posts yet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PostsList, {\n          posts: posts,\n          getPosts: getPosts,\n          hasMore: hasMore,\n          removePost: removePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LikedPosts, \"0ptx3dysITvlvQ0yT0KJP+ePBJ0=\");\n\n_c = LikedPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikedPosts\");","map":{"version":3,"sources":["C:/Users/lucas/Desktop/projetos-react/linkr/src/components/LikedPosts/LikedPosts.js"],"names":["axios","useContext","useEffect","useState","UserContext","Loading","StyledTimeline","PostsList","LikedPosts","posts","setPosts","isLoading","setIsLoading","hasMore","setHasMore","error","setError","user","getPosts","earlier","reset","config","headers","Authorization","token","url","length","request","get","refreshPosts","then","response","data","catch","removePost","repost","id","filteredPosts","filter","p","repostId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWhB,UAAU,CAACG,WAAD,CAA3B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,IAAJ,EAAU;AACRC,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACD,IAAD,CAJM,CAAT;;AAMA,WAASC,QAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkC;AAChC,QAAID,OAAO,IAAIC,KAAf,EAAsB;AACpB;AACD;;AACD,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AAD7B;AADI,KAAf;AAKA,QAAIC,GAAG,GAAI,sEAAX;;AACA,QAAIhB,KAAK,IAAIA,KAAK,CAACiB,MAAN,GAAe,CAA5B,EAA+B;AAC7BD,MAAAA,GAAG,GAAI,GAAEA,GAAI,WAAUhB,KAAK,CAACiB,MAAO,EAApC;AACD;;AACD,UAAMC,OAAO,GAAG3B,KAAK,CAAC4B,GAAN,CAAUH,GAAV,EAAeJ,MAAf,CAAhB;AACA,QAAIQ,YAAJ;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAcC,QAAD,IAAc;AACzBF,MAAAA,YAAY,GAAGpB,KAAK,GAChB,CAAC,GAAGA,KAAJ,EAAW,GAAGsB,QAAQ,CAACC,IAAT,CAAcvB,KAA5B,CADgB,GAEhB,CAAC,GAAGsB,QAAQ,CAACC,IAAT,CAAcvB,KAAlB,CAFJ;;AAGA,UAAIsB,QAAQ,CAACC,IAAT,CAAcvB,KAAd,CAAoBiB,MAApB,GAA6B,EAAjC,EAAqC;AACnCZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDJ,MAAAA,QAAQ,CAACmB,YAAD,CAAR;AACAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATD;AAWAe,IAAAA,OAAO,CAACM,KAAR,CAAc,MAAM;AAClBnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAJD;AAKD;;AAED,WAASkB,UAAT,CAAoBC,MAApB,EAA4BC,EAA5B,EAAgC;AAC9B,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAIF,MAAJ,EAAY;AACVE,MAAAA,aAAa,GAAG5B,KAAK,CAAC6B,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeJ,EAAnC,CAAhB;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,GAAG5B,KAAK,CAAC6B,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAA7B,CAAhB;AACD;;AACD,UAAMP,YAAY,GAAG,CAAC,GAAGQ,aAAJ,CAArB;AACA3B,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACD;;AAED,sBACE,QAAC,cAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGlB,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADQ,GAENF,KAAK,KAAK,IAAV,GACFM,KAAK,gBACH;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,GAKH,EANA,GAQAN,KAAK,CAACiB,MAAN,KAAiB,CAAjB,gBACF;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,gBAGF,QAAC,SAAD;AACE,UAAA,KAAK,EAAEjB,KADT;AAEE,UAAA,QAAQ,EAAES,QAFZ;AAGE,UAAA,OAAO,EAAEL,OAHX;AAIE,UAAA,UAAU,EAAEqB;AAJd;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAvFuB1B,U;;KAAAA,U","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\n\r\nexport default function LikedPosts() {\r\n  const [posts, setPosts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    if (earlier || reset) {\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/liked`;\r\n    if (posts && posts.length > 0) {\r\n      url = `${url}?offset=${posts.length}`;\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      refreshPosts = posts\r\n        ? [...posts, ...response.data.posts]\r\n        : [...response.data.posts];\r\n      if (response.data.posts.length < 10) {\r\n        setHasMore(false);\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1>my likes</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === null ? (\r\n            error ? (\r\n              <p className=\"warning\">\r\n                Could not get posts right now. Please try again.\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">No liked posts yet!</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}