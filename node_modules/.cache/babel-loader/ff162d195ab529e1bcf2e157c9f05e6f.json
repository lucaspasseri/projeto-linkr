{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\projetos-react\\\\linkr\\\\src\\\\components\\\\Timeline\\\\EditArea.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditArea({\n  id,\n  setAlteredText,\n  setIsLoading,\n  isEditing,\n  setIsEditing,\n  alteredText,\n  isLoading,\n  setError\n}) {\n  _s();\n\n  const [newText, setNewText] = useState(alteredText);\n  const userToken = useContext(UserContext).user.token;\n  const editorRef = useRef();\n  useEffect(() => {\n    if (isEditing) {\n      editorRef.current.focus();\n      editorRef.current.selectionStart = editorRef.current.value.length;\n      editorRef.current.selectionEnd = editorRef.current.value.length;\n    }\n  }, [isEditing]);\n\n  function cancelEditing() {\n    setIsEditing(false);\n  }\n\n  function keyActions(e) {\n    if (isLoading) {\n      return;\n    }\n\n    if (e.keyCode === 27) {\n      e.preventDefault();\n      cancelEditing();\n    }\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      sendEdit();\n      return;\n    }\n  }\n\n  function sendEdit() {\n    setIsLoading(true);\n    const body = {\n      text: newText\n    };\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    };\n    const editPostRequest = axios.put(`https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${id}`, body, config);\n    editPostRequest.then(() => {\n      setAlteredText(newText);\n      setIsEditing(false);\n      setIsLoading(false);\n    });\n    editPostRequest.catch(() => {\n      setIsLoading(false);\n      setError(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: newText,\n    onChange: e => setNewText(e.target.value),\n    onKeyDown: e => keyActions(e),\n    ref: editorRef,\n    disabled: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditArea, \"1jNl5fHFbmiZaAHOckDcHRiyUb4=\");\n\n_c = EditArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditArea\");","map":{"version":3,"sources":["C:/Users/lucas/Desktop/projetos-react/linkr/src/components/Timeline/EditArea.js"],"names":["axios","useContext","useEffect","useRef","useState","UserContext","EditArea","id","setAlteredText","setIsLoading","isEditing","setIsEditing","alteredText","isLoading","setError","newText","setNewText","userToken","user","token","editorRef","current","focus","selectionStart","value","length","selectionEnd","cancelEditing","keyActions","e","keyCode","preventDefault","sendEdit","body","text","config","headers","Authorization","editPostRequest","put","then","catch","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,EAD+B;AAE/BC,EAAAA,cAF+B;AAG/BC,EAAAA,YAH+B;AAI/BC,EAAAA,SAJ+B;AAK/BC,EAAAA,YAL+B;AAM/BC,EAAAA,WAN+B;AAO/BC,EAAAA,SAP+B;AAQ/BC,EAAAA;AAR+B,CAAlB,EASZ;AAAA;;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACQ,WAAD,CAAtC;AACA,QAAMK,SAAS,GAAGhB,UAAU,CAACI,WAAD,CAAV,CAAwBa,IAAxB,CAA6BC,KAA/C;AACA,QAAMC,SAAS,GAAGjB,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ,EAAe;AACbU,MAAAA,SAAS,CAACC,OAAV,CAAkBC,KAAlB;AACAF,MAAAA,SAAS,CAACC,OAAV,CAAkBE,cAAlB,GAAmCH,SAAS,CAACC,OAAV,CAAkBG,KAAlB,CAAwBC,MAA3D;AACAL,MAAAA,SAAS,CAACC,OAAV,CAAkBK,YAAlB,GAAiCN,SAAS,CAACC,OAAV,CAAkBG,KAAlB,CAAwBC,MAAzD;AACD;AACF,GANQ,EAMN,CAACf,SAAD,CANM,CAAT;;AAQA,WAASiB,aAAT,GAAyB;AACvBhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,WAASiB,UAAT,CAAoBC,CAApB,EAAuB;AACrB,QAAIhB,SAAJ,EAAe;AACb;AACD;;AACD,QAAIgB,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,MAAAA,CAAC,CAACE,cAAF;AACAJ,MAAAA,aAAa;AACd;;AACD,QAAIE,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,MAAAA,CAAC,CAACE,cAAF;AACAC,MAAAA,QAAQ;AACR;AACD;AACF;;AAED,WAASA,QAAT,GAAoB;AAClBvB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMwB,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAEnB;AAAR,KAAb;AACA,UAAMoB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASpB,SAAU;AAD5B;AADI,KAAf;AAKA,UAAMqB,eAAe,GAAGtC,KAAK,CAACuC,GAAN,CACrB,kEAAiEhC,EAAG,EAD/C,EAEtB0B,IAFsB,EAGtBE,MAHsB,CAAxB;AAKAG,IAAAA,eAAe,CAACE,IAAhB,CAAqB,MAAM;AACzBhC,MAAAA,cAAc,CAACO,OAAD,CAAd;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD;AAKA6B,IAAAA,eAAe,CAACG,KAAhB,CAAsB,MAAM;AAC1BhC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAHD;AAID;;AAED,sBACE;AACE,IAAA,KAAK,EAAEC,OADT;AAEE,IAAA,QAAQ,EAAGc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACa,MAAF,CAASlB,KAAV,CAF7B;AAGE,IAAA,SAAS,EAAGK,CAAD,IAAOD,UAAU,CAACC,CAAD,CAH9B;AAIE,IAAA,GAAG,EAAET,SAJP;AAKE,IAAA,QAAQ,EAAEP;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzEuBP,Q;;KAAAA,Q","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nexport default function EditArea({\r\n  id,\r\n  setAlteredText,\r\n  setIsLoading,\r\n  isEditing,\r\n  setIsEditing,\r\n  alteredText,\r\n  isLoading,\r\n  setError,\r\n}) {\r\n  const [newText, setNewText] = useState(alteredText);\r\n  const userToken = useContext(UserContext).user.token;\r\n  const editorRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      editorRef.current.focus();\r\n      editorRef.current.selectionStart = editorRef.current.value.length;\r\n      editorRef.current.selectionEnd = editorRef.current.value.length;\r\n    }\r\n  }, [isEditing]);\r\n\r\n  function cancelEditing() {\r\n    setIsEditing(false);\r\n  }\r\n  function keyActions(e) {\r\n    if (isLoading) {\r\n      return;\r\n    }\r\n    if (e.keyCode === 27) {\r\n      e.preventDefault();\r\n      cancelEditing();\r\n    }\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      sendEdit();\r\n      return;\r\n    }\r\n  }\r\n\r\n  function sendEdit() {\r\n    setIsLoading(true);\r\n    const body = { text: newText };\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userToken}`,\r\n      },\r\n    };\r\n    const editPostRequest = axios.put(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${id}`,\r\n      body,\r\n      config\r\n    );\r\n    editPostRequest.then(() => {\r\n      setAlteredText(newText);\r\n      setIsEditing(false);\r\n      setIsLoading(false);\r\n    });\r\n    editPostRequest.catch(() => {\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <textarea\r\n      value={newText}\r\n      onChange={(e) => setNewText(e.target.value)}\r\n      onKeyDown={(e) => keyActions(e)}\r\n      ref={editorRef}\r\n      disabled={isLoading}\r\n    ></textarea>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}