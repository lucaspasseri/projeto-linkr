{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\projetos-react\\\\linkr\\\\src\\\\components\\\\HashtagPage\\\\HashtagPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport UserContext from \"../../contexts/UserContexts\";\nimport Loading from \"../Loading/Loading\";\nimport StyledTimeline from \"../Styles/StyledTimeline\";\nimport PostsList from \"../Timeline/PostsList\";\nimport useInterval from \"../useInterval/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HashtagPage() {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    hashtag\n  } = useParams();\n  useEffect(() => {\n    if (user) {\n      getPosts();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      getPosts(true, true);\n      setIsLoading(true);\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }, [hashtag]);\n\n  function getPosts(earlier, reset) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/hashtags/${hashtag}/posts`;\n    let referenceId;\n\n    if (!reset) {\n      if (earlier) {\n        if (posts) {\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\n          url = `${url}?earlierThan=${referenceId}`;\n        }\n      } else {\n        if (posts && posts.length > 0) {\n          referenceId = posts[posts.length - 1].repostId ? posts[posts.length - 1].repostId : posts[posts.length - 1].id;\n          url = `${url}?olderThan=${referenceId}`;\n        }\n      }\n    }\n\n    const request = axios.get(url, config);\n    let refreshPosts;\n    request.then(response => {\n      if (earlier && !reset) {\n        if (posts) {\n          refreshPosts = [...response.data.posts, ...posts];\n        } else {\n          refreshPosts = [...response.data.posts];\n        }\n      } else {\n        if (reset) {\n          refreshPosts = [...response.data.posts];\n        } else {\n          refreshPosts = posts ? [...posts, ...response.data.posts] : [...response.data.posts];\n        }\n\n        if (response.data.posts.length < 10) {\n          setHasMore(false);\n        }\n      }\n\n      setPosts(refreshPosts);\n      setIsLoading(false);\n    });\n    request.catch(() => {\n      setHasMore(false);\n      setIsLoading(false);\n      setError(true);\n    });\n  }\n\n  useInterval(() => {\n    if (hasMore) {\n      getPosts(true);\n    }\n  }, 15000);\n\n  function removePost(repost, id) {\n    let filteredPosts = [];\n\n    if (repost) {\n      filteredPosts = posts.filter(p => p.repostId !== id);\n    } else {\n      filteredPosts = posts.filter(p => p.id !== id);\n    }\n\n    const refreshPosts = [...filteredPosts];\n    setPosts(refreshPosts);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledTimeline, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"# \", hashtag]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-left\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this) : posts === undefined ? error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"Error getting posts, please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this) : \"\" : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"No posts with this hashtag.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PostsList, {\n          posts: posts,\n          getPosts: getPosts,\n          hasMore: hasMore,\n          removePost: removePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HashtagPage, \"UvhFD+3HKtNzF6k5IL49ZAdTGjA=\", false, function () {\n  return [useParams, useInterval];\n});\n\n_c = HashtagPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HashtagPage\");","map":{"version":3,"sources":["C:/Users/lucas/Desktop/projetos-react/linkr/src/components/HashtagPage/HashtagPage.js"],"names":["axios","useContext","useEffect","useState","useParams","UserContext","Loading","StyledTimeline","PostsList","useInterval","HashtagPage","posts","setPosts","isLoading","setIsLoading","hasMore","setHasMore","error","setError","user","hashtag","getPosts","window","scrollTo","top","behavior","earlier","reset","config","headers","Authorization","token","url","referenceId","repostId","id","length","request","get","refreshPosts","then","response","data","catch","removePost","repost","filteredPosts","filter","p","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\n\r\nimport Loading from \"../Loading/Loading\";\r\nimport StyledTimeline from \"../Styles/StyledTimeline\";\r\nimport PostsList from \"../Timeline/PostsList\";\r\nimport useInterval from \"../useInterval/useInterval\";\r\n\r\nexport default function HashtagPage() {\r\n  const [posts, setPosts] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const { user } = useContext(UserContext);\r\n  const { hashtag } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getPosts(true, true);\r\n      setIsLoading(true);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [hashtag]);\r\n\r\n  function getPosts(earlier, reset) {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    let url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/hashtags/${hashtag}/posts`;\r\n    let referenceId;\r\n    if (!reset) {\r\n      if (earlier) {\r\n        if (posts) {\r\n          referenceId = posts[0].repostId ? posts[0].repostId : posts[0].id;\r\n          url = `${url}?earlierThan=${referenceId}`;\r\n        }\r\n      } else {\r\n        if (posts && posts.length > 0) {\r\n          referenceId = posts[posts.length - 1].repostId\r\n            ? posts[posts.length - 1].repostId\r\n            : posts[posts.length - 1].id;\r\n          url = `${url}?olderThan=${referenceId}`;\r\n        }\r\n      }\r\n    }\r\n    const request = axios.get(url, config);\r\n    let refreshPosts;\r\n    request.then((response) => {\r\n      if (earlier && !reset) {\r\n        if (posts) {\r\n          refreshPosts = [...response.data.posts, ...posts];\r\n        } else {\r\n          refreshPosts = [...response.data.posts];\r\n        }\r\n      } else {\r\n        if (reset) {\r\n          refreshPosts = [...response.data.posts];\r\n        } else {\r\n          refreshPosts = posts\r\n            ? [...posts, ...response.data.posts]\r\n            : [...response.data.posts];\r\n        }\r\n        if (response.data.posts.length < 10) {\r\n          setHasMore(false);\r\n        }\r\n      }\r\n      setPosts(refreshPosts);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    request.catch(() => {\r\n      setHasMore(false);\r\n      setIsLoading(false);\r\n      setError(true);\r\n    });\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (hasMore) {\r\n      getPosts(true);\r\n    }\r\n  }, 15000);\r\n\r\n  function removePost(repost, id) {\r\n    let filteredPosts = [];\r\n    if (repost) {\r\n      filteredPosts = posts.filter((p) => p.repostId !== id);\r\n    } else {\r\n      filteredPosts = posts.filter((p) => p.id !== id);\r\n    }\r\n    const refreshPosts = [...filteredPosts];\r\n    setPosts(refreshPosts);\r\n  }\r\n\r\n  return (\r\n    <StyledTimeline>\r\n      <h1># {hashtag}</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"page-left\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : posts === undefined ? (\r\n            error ? (\r\n              <p className=\"warning\">Error getting posts, please try again.</p>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : posts.length === 0 ? (\r\n            <p className=\"warning\">No posts with this hashtag.</p>\r\n          ) : (\r\n            <PostsList\r\n              posts={posts}\r\n              getPosts={getPosts}\r\n              hasMore={hasMore}\r\n              removePost={removePost}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"page-right\"></div>\r\n      </div>\r\n    </StyledTimeline>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}