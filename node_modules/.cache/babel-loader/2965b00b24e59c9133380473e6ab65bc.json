{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\projetos-react\\\\linkr\\\\src\\\\components\\\\Comments\\\\CommentsSection.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContexts\";\nimport CreateComment from \"./CreateComment\";\nimport Avatar from \"./Avatar\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentSection({\n  post,\n  setCounter\n}) {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [comments, setComments] = useState([]);\n  const [following, setFollowing] = useState([]);\n  const commentsRef = useRef();\n  const inputRef = useRef();\n  useEffect(() => {\n    getComments();\n    getFollowing();\n  }, []);\n\n  function getComments() {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const commentsRequest = axios.get(`https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/comments`, config);\n    commentsRequest.then(response => {\n      setComments(response.data.comments);\n      setCounter(response.data.comments.length);\n      focusComments();\n    });\n    commentsRequest.catch(() => {\n      alert(\"Could not get comments\");\n    });\n  }\n\n  function getFollowing() {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const followingRequest = axios.get(`https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/follows`, config);\n    followingRequest.then(response => {\n      const ids = response.data.users.map(user => user.id);\n      setFollowing(ids);\n    });\n    followingRequest.catch(() => {\n      alert(\"Could not get who you follow\");\n    });\n  }\n\n  function focusComments() {\n    commentsRef.current.scrollTo({\n      top: commentsRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n    setTimeout(() => {\n      inputRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"start\"\n      });\n    }, 500);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledCommentsSection, {\n    initial: !comments.length,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: commentsRef,\n      className: \"comments\",\n      children: [comments.length === 0 ? post.commentCount !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-box\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-box\",\n        children: \"No comments yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            avatar: comment.user.avatar,\n            id: comment.user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/user/${comment.user.id}`,\n                children: comment.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [post.user.id === comment.user.id && \" • post's author\", following.includes(comment.user.id) && \" • following\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment\",\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateComment, {\n      inputRef: inputRef,\n      post: post,\n      getComments: getComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentSection, \"lw93uDh8DP2LdWS/fNQjVHn0H1E=\");\n\n_c = CommentSection;\nconst StyledCommentsSection = styled.div`\n  width: 100%;\n  max-height: ${props => props.initial ? \"140px\" : \"600px\"};\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  transition: 0.5s;\n  font-size: 14px;\n  line-height: 17px;\n  .comments {\n    overflow-y: auto;\n    max-height: ${props => props.initial ? \"140px\" : \"420px\"};\n\n    .comment-box {\n      padding: 0px 20px;\n      display: flex;\n      align-items: center;\n      min-height: 70px;\n      border-bottom: 1px solid #353535;\n      p {\n        margin-bottom: 3px;\n      }\n      a {\n        font-weight: bold;\n      }\n      span {\n        color: #565656;\n      }\n      .comment {\n        color: #acacac;\n        word-break: break-word;\n      }\n    }\n  }\n`;\n_c2 = StyledCommentsSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentSection\");\n$RefreshReg$(_c2, \"StyledCommentsSection\");","map":{"version":3,"sources":["C:/Users/lucas/Desktop/projetos-react/linkr/src/components/Comments/CommentsSection.js"],"names":["axios","styled","useContext","useEffect","useRef","useState","UserContext","CreateComment","Avatar","Link","CommentSection","post","setCounter","user","comments","setComments","following","setFollowing","commentsRef","inputRef","getComments","getFollowing","config","headers","Authorization","token","commentsRequest","get","id","then","response","data","length","focusComments","catch","alert","followingRequest","ids","users","map","current","scrollTo","top","scrollHeight","behavior","setTimeout","scrollIntoView","block","inline","commentCount","comment","avatar","username","includes","text","StyledCommentsSection","div","props","initial"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport UserContext from \"../../contexts/UserContexts\";\r\nimport CreateComment from \"./CreateComment\";\r\nimport Avatar from \"./Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CommentSection({ post, setCounter }) {\r\n  const { user } = useContext(UserContext);\r\n  const [comments, setComments] = useState([]);\r\n  const [following, setFollowing] = useState([]);\r\n  const commentsRef = useRef();\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n    getFollowing();\r\n  }, []);\r\n\r\n  function getComments() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const commentsRequest = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/posts/${post.id}/comments`,\r\n      config\r\n    );\r\n    commentsRequest.then((response) => {\r\n      setComments(response.data.comments);\r\n      setCounter(response.data.comments.length);\r\n      focusComments();\r\n    });\r\n    commentsRequest.catch(() => {\r\n      alert(\"Could not get comments\");\r\n    });\r\n  }\r\n\r\n  function getFollowing() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const followingRequest = axios.get(\r\n      `https://mock-api.bootcamp.respondeai.com.br/api/v2/linkr/users/follows`,\r\n      config\r\n    );\r\n    followingRequest.then((response) => {\r\n      const ids = response.data.users.map((user) => user.id);\r\n      setFollowing(ids);\r\n    });\r\n    followingRequest.catch(() => {\r\n      alert(\"Could not get who you follow\");\r\n    });\r\n  }\r\n\r\n  function focusComments() {\r\n    commentsRef.current.scrollTo({\r\n      top: commentsRef.current.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n    setTimeout(() => {\r\n      inputRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\",\r\n        inline: \"start\",\r\n      });\r\n    }, 500);\r\n  }\r\n  return (\r\n    <StyledCommentsSection initial={!comments.length}>\r\n      <div ref={commentsRef} className=\"comments\">\r\n        {comments.length === 0 ? (\r\n          post.commentCount !== 0 ? (\r\n            <div className=\"comment-box\">Loading...</div>\r\n          ) : (\r\n            <div className=\"comment-box\">No comments yet</div>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {comments.map((comment) => {\r\n          return (\r\n            <div className=\"comment-box\" key={comment.id}>\r\n              <Avatar avatar={comment.user.avatar} id={comment.user.id} />\r\n              <div>\r\n                <p>\r\n                  <Link to={`/user/${comment.user.id}`}>\r\n                    {comment.user.username}\r\n                  </Link>\r\n                  <span>\r\n                    {post.user.id === comment.user.id && \" • post's author\"}\r\n                    {following.includes(comment.user.id) && \" • following\"}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment\">{comment.text}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <CreateComment\r\n        inputRef={inputRef}\r\n        post={post}\r\n        getComments={getComments}\r\n      />\r\n    </StyledCommentsSection>\r\n  );\r\n}\r\n\r\nconst StyledCommentsSection = styled.div`\r\n  width: 100%;\r\n  max-height: ${(props) => (props.initial ? \"140px\" : \"600px\")};\r\n  padding: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  transition: 0.5s;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  .comments {\r\n    overflow-y: auto;\r\n    max-height: ${(props) => (props.initial ? \"140px\" : \"420px\")};\r\n\r\n    .comment-box {\r\n      padding: 0px 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      min-height: 70px;\r\n      border-bottom: 1px solid #353535;\r\n      p {\r\n        margin-bottom: 3px;\r\n      }\r\n      a {\r\n        font-weight: bold;\r\n      }\r\n      span {\r\n        color: #565656;\r\n      }\r\n      .comment {\r\n        color: #acacac;\r\n        word-break: break-word;\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}